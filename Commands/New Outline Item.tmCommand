<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>autoScrollOutput</key>
	<true/>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env python

import sys
import os

old_line=os.environ['TM_CURRENT_LINE']
index_of_first_dash = old_line.find('-')

sys.stdout.write ("\n") # We need a new line no matter what - this is the enter key, after all


# Now we need to figure out if the current line is part of an outline so we know if we need to make the current line and outline. If it is, we do so. 

# We need to get the character after the first dash to see if if theres only one dash (an outline) or multiple (a heading)
if index_of_first_dash + 1 &lt; len(old_line) and index_of_first_dash != -1:
    character_after_first_dash = old_line[index_of_first_dash+1]
else:
    character_after_first_dash = "" # I assume if there is a single dash and nothing following it, its an outline placeholder and not a one-character long heading. 


if index_of_first_dash != -1 and (index_of_first_dash == 0 or old_line[0:index_of_first_dash].isspace() == True) and character_after_first_dash != '-': # Check that there is a dash, if the first character of the line is a dash, and that the character after the dash is not a dash.

    number_of_tabs_preceding_first_dash = 0
    number_of_spaces_preceding_first_dash = 0


    for x in range(0,index_of_first_dash):
        if old_line[x] == "\t":
            number_of_tabs_preceding_first_dash = number_of_tabs_preceding_first_dash + 1
        if old_line[x] == " ":
            number_of_spaces_preceding_first_dash = number_of_spaces_preceding_first_dash + 1
            

    # To match the indent of the old line. This needs to be altered to be able to match spaces, tabs or a combination
    for x in range(0,number_of_tabs_preceding_first_dash): 
        sys.stdout.write("\t")

    for x in range(0,number_of_spaces_preceding_first_dash): 
        sys.stdout.write(" ")

    sys.stdout.write ("- ")</string>
	<key>input</key>
	<string>line</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string></string>
	<key>name</key>
	<string>New Outline Item</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>text</string>
	<key>outputLocation</key>
	<string>afterInput</string>
	<key>scope</key>
	<string>text.html.markdown</string>
	<key>uuid</key>
	<string>835C4551-4656-455F-80D7-33076EBF7DFA</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
